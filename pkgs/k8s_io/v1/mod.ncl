# Kubernetes core v1 types
{
  PodAffinityTerm = (import "./podaffinityterm.ncl").PodAffinityTerm,
  ISCSIPersistentVolumeSource = (import "./iscsipersistentvolumesource.ncl").ISCSIPersistentVolumeSource,
  FlexPersistentVolumeSource = (import "./flexpersistentvolumesource.ncl").FlexPersistentVolumeSource,
  CSIVolumeSource = (import "./csivolumesource.ncl").CSIVolumeSource,
  PersistentVolume = (import "./persistentvolume.ncl").PersistentVolume,
  AzureFileVolumeSource = (import "./azurefilevolumesource.ncl").AzureFileVolumeSource,
  PersistentVolumeClaimTemplate = (import "./persistentvolumeclaimtemplate.ncl").PersistentVolumeClaimTemplate,
  PodAffinity = (import "./podaffinity.ncl").PodAffinity,
  LoadBalancerIngress = (import "./loadbalanceringress.ncl").LoadBalancerIngress,
  LifecycleHandler = (import "./lifecyclehandler.ncl").LifecycleHandler,
  CSIPersistentVolumeSource = (import "./csipersistentvolumesource.ncl").CSIPersistentVolumeSource,
  SuccessPolicyRule = (import "./successpolicyrule.ncl").SuccessPolicyRule,
  ContainerStateRunning = (import "./containerstaterunning.ncl").ContainerStateRunning,
  ObjectFieldSelector = (import "./objectfieldselector.ncl").ObjectFieldSelector,
  TypedObjectReference = (import "./typedobjectreference.ncl").TypedObjectReference,
  PodReadinessGate = (import "./podreadinessgate.ncl").PodReadinessGate,
  ClusterTrustBundleProjection = (import "./clustertrustbundleprojection.ncl").ClusterTrustBundleProjection,
  HostIP = (import "./hostip.ncl").HostIP,
  OwnerReference = (import "./ownerreference.ncl").OwnerReference,
  EnvVar = (import "./envvar.ncl").EnvVar,
  DownwardAPIProjection = (import "./downwardapiprojection.ncl").DownwardAPIProjection,
  AppArmorProfile = (import "./apparmorprofile.ncl").AppArmorProfile,
  PodDNSConfig = (import "./poddnsconfig.ncl").PodDNSConfig,
  VolumeNodeAffinity = (import "./volumenodeaffinity.ncl").VolumeNodeAffinity,
  RollingUpdateDaemonSet = (import "./rollingupdatedaemonset.ncl").RollingUpdateDaemonSet,
  ProjectedVolumeSource = (import "./projectedvolumesource.ncl").ProjectedVolumeSource,
  GCEPersistentDiskVolumeSource = (import "./gcepersistentdiskvolumesource.ncl").GCEPersistentDiskVolumeSource,
  CinderVolumeSource = (import "./cindervolumesource.ncl").CinderVolumeSource,
  RBDPersistentVolumeSource = (import "./rbdpersistentvolumesource.ncl").RBDPersistentVolumeSource,
  ContainerState = (import "./containerstate.ncl").ContainerState,
  StatefulSetCondition = (import "./statefulsetcondition.ncl").StatefulSetCondition,
  PodFailurePolicyRule = (import "./podfailurepolicyrule.ncl").PodFailurePolicyRule,
  DeploymentStrategy = (import "./deploymentstrategy.ncl").DeploymentStrategy,
  StatefulSetUpdateStrategy = (import "./statefulsetupdatestrategy.ncl").StatefulSetUpdateStrategy,
  ContainerStatus = (import "./containerstatus.ncl").ContainerStatus,
  EnvFromSource = (import "./envfromsource.ncl").EnvFromSource,
  SecretReference = (import "./secretreference.ncl").SecretReference,
  LocalObjectReference = (import "./localobjectreference.ncl").LocalObjectReference,
  NodeSelectorRequirement = (import "./nodeselectorrequirement.ncl").NodeSelectorRequirement,
  GlusterfsPersistentVolumeSource = (import "./glusterfspersistentvolumesource.ncl").GlusterfsPersistentVolumeSource,
  Probe = (import "./probe.ncl").Probe,
  GRPCAction = (import "./grpcaction.ncl").GRPCAction,
  PodResourceClaim = (import "./podresourceclaim.ncl").PodResourceClaim,
  PodResourceClaimStatus = (import "./podresourceclaimstatus.ncl").PodResourceClaimStatus,
  QuobyteVolumeSource = (import "./quobytevolumesource.ncl").QuobyteVolumeSource,
  SecretEnvSource = (import "./secretenvsource.ncl").SecretEnvSource,
  Pod = (import "./pod.ncl").Pod,
  CronJobSpec = (import "./cronjobspec.ncl").CronJobSpec,
  PortworxVolumeSource = (import "./portworxvolumesource.ncl").PortworxVolumeSource,
  StorageOSPersistentVolumeSource = (import "./storageospersistentvolumesource.ncl").StorageOSPersistentVolumeSource,
  PersistentVolumeClaimCondition = (import "./persistentvolumeclaimcondition.ncl").PersistentVolumeClaimCondition,
  DeploymentCondition = (import "./deploymentcondition.ncl").DeploymentCondition,
  PersistentVolumeClaimVolumeSource = (import "./persistentvolumeclaimvolumesource.ncl").PersistentVolumeClaimVolumeSource,
  RollingUpdateDeployment = (import "./rollingupdatedeployment.ncl").RollingUpdateDeployment,
  WeightedPodAffinityTerm = (import "./weightedpodaffinityterm.ncl").WeightedPodAffinityTerm,
  SeccompProfile = (import "./seccompprofile.ncl").SeccompProfile,
  StatusDetails = (import "./statusdetails.ncl").StatusDetails,
  DaemonSetCondition = (import "./daemonsetcondition.ncl").DaemonSetCondition,
  RollingUpdateStatefulSetStrategy = (import "./rollingupdatestatefulsetstrategy.ncl").RollingUpdateStatefulSetStrategy,
  VolumeProjection = (import "./volumeprojection.ncl").VolumeProjection,
  PodSchedulingGate = (import "./podschedulinggate.ncl").PodSchedulingGate,
  Container = (import "./container.ncl").Container,
  LocalVolumeSource = (import "./localvolumesource.ncl").LocalVolumeSource,
  Volume = (import "./volume.ncl").Volume,
  VolumeMount = (import "./volumemount.ncl").VolumeMount,
  ScaleIOVolumeSource = (import "./scaleiovolumesource.ncl").ScaleIOVolumeSource,
  UncountedTerminatedPods = (import "./uncountedterminatedpods.ncl").UncountedTerminatedPods,
  StatefulSetPersistentVolumeClaimRetentionPolicy = (import "./statefulsetpersistentvolumeclaimretentionpolicy.ncl").StatefulSetPersistentVolumeClaimRetentionPolicy,
  ObjectMeta = (import "./objectmeta.ncl").ObjectMeta,
  FlockerVolumeSource = (import "./flockervolumesource.ncl").FlockerVolumeSource,
  ImageVolumeSource = (import "./imagevolumesource.ncl").ImageVolumeSource,
  PodDNSConfigOption = (import "./poddnsconfigoption.ncl").PodDNSConfigOption,
  SELinuxOptions = (import "./selinuxoptions.ncl").SELinuxOptions,
  PersistentVolumeClaimStatus = (import "./persistentvolumeclaimstatus.ncl").PersistentVolumeClaimStatus,
  PhotonPersistentDiskVolumeSource = (import "./photonpersistentdiskvolumesource.ncl").PhotonPersistentDiskVolumeSource,
  ConfigMapVolumeSource = (import "./configmapvolumesource.ncl").ConfigMapVolumeSource,
  PersistentVolumeClaimSpec = (import "./persistentvolumeclaimspec.ncl").PersistentVolumeClaimSpec,
  ConfigMap = (import "./configmap.ncl").ConfigMap,
  EphemeralContainer = (import "./ephemeralcontainer.ncl").EphemeralContainer,
  ContainerUser = (import "./containeruser.ncl").ContainerUser,
  PodStatus = (import "./podstatus.ncl").PodStatus,
  Lifecycle = (import "./lifecycle.ncl").Lifecycle,
  FlexVolumeSource = (import "./flexvolumesource.ncl").FlexVolumeSource,
  PortStatus = (import "./portstatus.ncl").PortStatus,
  JobStatus = (import "./jobstatus.ncl").JobStatus,
  ClientIPConfig = (import "./clientipconfig.ncl").ClientIPConfig,
  FCVolumeSource = (import "./fcvolumesource.ncl").FCVolumeSource,
  ResourceRequirements = (import "./resourcerequirements.ncl").ResourceRequirements,
  PodSecurityContext = (import "./podsecuritycontext.ncl").PodSecurityContext,
  ServiceSpec = (import "./servicespec.ncl").ServiceSpec,
  CephFSPersistentVolumeSource = (import "./cephfspersistentvolumesource.ncl").CephFSPersistentVolumeSource,
  VsphereVirtualDiskVolumeSource = (import "./vspherevirtualdiskvolumesource.ncl").VsphereVirtualDiskVolumeSource,
  Toleration = (import "./toleration.ncl").Toleration,
  DaemonSetSpec = (import "./daemonsetspec.ncl").DaemonSetSpec,
  DaemonSet = (import "./daemonset.ncl").DaemonSet,
  StatefulSetOrdinals = (import "./statefulsetordinals.ncl").StatefulSetOrdinals,
  Service = (import "./service.ncl").Service,
  PersistentVolumeClaim = (import "./persistentvolumeclaim.ncl").PersistentVolumeClaim,
  StatefulSet = (import "./statefulset.ncl").StatefulSet,
  GlusterfsVolumeSource = (import "./glusterfsvolumesource.ncl").GlusterfsVolumeSource,
  Sysctl = (import "./sysctl.ncl").Sysctl,
  ResourceStatus = (import "./resourcestatus.ncl").ResourceStatus,
  LabelSelector = (import "./labelselector.ncl").LabelSelector,
  JobSpec = (import "./jobspec.ncl").JobSpec,
  VolumeDevice = (import "./volumedevice.ncl").VolumeDevice,
  TopologySpreadConstraint = (import "./topologyspreadconstraint.ncl").TopologySpreadConstraint,
  HTTPGetAction = (import "./httpgetaction.ncl").HTTPGetAction,
  LinuxContainerUser = (import "./linuxcontaineruser.ncl").LinuxContainerUser,
  HostPathVolumeSource = (import "./hostpathvolumesource.ncl").HostPathVolumeSource,
  Capabilities = (import "./capabilities.ncl").Capabilities,
  ContainerStateTerminated = (import "./containerstateterminated.ncl").ContainerStateTerminated,
  SleepAction = (import "./sleepaction.ncl").SleepAction,
  ContainerStateWaiting = (import "./containerstatewaiting.ncl").ContainerStateWaiting,
  ConfigMapKeySelector = (import "./configmapkeyselector.ncl").ConfigMapKeySelector,
  VolumeResourceRequirements = (import "./volumeresourcerequirements.ncl").VolumeResourceRequirements,
  StorageOSVolumeSource = (import "./storageosvolumesource.ncl").StorageOSVolumeSource,
  Condition = (import "./condition.ncl").Condition,
  ObjectReference = (import "./objectreference.ncl").ObjectReference,
  PodFailurePolicyOnPodConditionsPattern = (import "./podfailurepolicyonpodconditionspattern.ncl").PodFailurePolicyOnPodConditionsPattern,
  Status = (import "./status.ncl").Status,
  DaemonSetStatus = (import "./daemonsetstatus.ncl").DaemonSetStatus,
  ContainerResizePolicy = (import "./containerresizepolicy.ncl").ContainerResizePolicy,
  DeploymentStatus = (import "./deploymentstatus.ncl").DeploymentStatus,
  AzureFilePersistentVolumeSource = (import "./azurefilepersistentvolumesource.ncl").AzureFilePersistentVolumeSource,
  ResourceHealth = (import "./resourcehealth.ncl").ResourceHealth,
  MicroTime = (import "./microtime.ncl").MicroTime,
  DownwardAPIVolumeSource = (import "./downwardapivolumesource.ncl").DownwardAPIVolumeSource,
  PodIP = (import "./podip.ncl").PodIP,
  PodFailurePolicyOnExitCodesRequirement = (import "./podfailurepolicyonexitcodesrequirement.ncl").PodFailurePolicyOnExitCodesRequirement,
  ResourceFieldSelector = (import "./resourcefieldselector.ncl").ResourceFieldSelector,
  CinderPersistentVolumeSource = (import "./cinderpersistentvolumesource.ncl").CinderPersistentVolumeSource,
  SuccessPolicy = (import "./successpolicy.ncl").SuccessPolicy,
  NodeSelectorTerm = (import "./nodeselectorterm.ncl").NodeSelectorTerm,
  ListMeta = (import "./listmeta.ncl").ListMeta,
  ConfigMapProjection = (import "./configmapprojection.ncl").ConfigMapProjection,
  ISCSIVolumeSource = (import "./iscsivolumesource.ncl").ISCSIVolumeSource,
  CephFSVolumeSource = (import "./cephfsvolumesource.ncl").CephFSVolumeSource,
  SecretVolumeSource = (import "./secretvolumesource.ncl").SecretVolumeSource,
  PodFailurePolicy = (import "./podfailurepolicy.ncl").PodFailurePolicy,
  FieldsV1 = (import "./fieldsv1.ncl").FieldsV1,
  ExecAction = (import "./execaction.ncl").ExecAction,
  HTTPHeader = (import "./httpheader.ncl").HTTPHeader,
  PodTemplateSpec = (import "./podtemplatespec.ncl").PodTemplateSpec,
  AzureDiskVolumeSource = (import "./azurediskvolumesource.ncl").AzureDiskVolumeSource,
  ManagedFieldsEntry = (import "./managedfieldsentry.ncl").ManagedFieldsEntry,
  Affinity = (import "./affinity.ncl").Affinity,
  ResourceClaim = (import "./resourceclaim.ncl").ResourceClaim,
  ConfigMapEnvSource = (import "./configmapenvsource.ncl").ConfigMapEnvSource,
  TypedLocalObjectReference = (import "./typedlocalobjectreference.ncl").TypedLocalObjectReference,
  PodOS = (import "./podos.ncl").PodOS,
  GitRepoVolumeSource = (import "./gitrepovolumesource.ncl").GitRepoVolumeSource,
  SecretKeySelector = (import "./secretkeyselector.ncl").SecretKeySelector,
  EmptyDirVolumeSource = (import "./emptydirvolumesource.ncl").EmptyDirVolumeSource,
  LabelSelectorRequirement = (import "./labelselectorrequirement.ncl").LabelSelectorRequirement,
  NodeAffinity = (import "./nodeaffinity.ncl").NodeAffinity,
  SessionAffinityConfig = (import "./sessionaffinityconfig.ncl").SessionAffinityConfig,
  DaemonSetUpdateStrategy = (import "./daemonsetupdatestrategy.ncl").DaemonSetUpdateStrategy,
  PodSpec = (import "./podspec.ncl").PodSpec,
  JobTemplateSpec = (import "./jobtemplatespec.ncl").JobTemplateSpec,
  Time = (import "./time.ncl").Time,
  ServiceAccountTokenProjection = (import "./serviceaccounttokenprojection.ncl").ServiceAccountTokenProjection,
  StatefulSetSpec = (import "./statefulsetspec.ncl").StatefulSetSpec,
  PersistentVolumeSpec = (import "./persistentvolumespec.ncl").PersistentVolumeSpec,
  AWSElasticBlockStoreVolumeSource = (import "./awselasticblockstorevolumesource.ncl").AWSElasticBlockStoreVolumeSource,
  NodeSelector = (import "./nodeselector.ncl").NodeSelector,
  Deployment = (import "./deployment.ncl").Deployment,
  SecurityContext = (import "./securitycontext.ncl").SecurityContext,
  ServicePort = (import "./serviceport.ncl").ServicePort,
  StatusCause = (import "./statuscause.ncl").StatusCause,
  LoadBalancerStatus = (import "./loadbalancerstatus.ncl").LoadBalancerStatus,
  JobCondition = (import "./jobcondition.ncl").JobCondition,
  EphemeralVolumeSource = (import "./ephemeralvolumesource.ncl").EphemeralVolumeSource,
  DeploymentSpec = (import "./deploymentspec.ncl").DeploymentSpec,
  PodCondition = (import "./podcondition.ncl").PodCondition,
  EnvVarSource = (import "./envvarsource.ncl").EnvVarSource,
  DownwardAPIVolumeFile = (import "./downwardapivolumefile.ncl").DownwardAPIVolumeFile,
  Job = (import "./job.ncl").Job,
  CronJob = (import "./cronjob.ncl").CronJob,
  ModifyVolumeStatus = (import "./modifyvolumestatus.ncl").ModifyVolumeStatus,
  NFSVolumeSource = (import "./nfsvolumesource.ncl").NFSVolumeSource,
  ScaleIOPersistentVolumeSource = (import "./scaleiopersistentvolumesource.ncl").ScaleIOPersistentVolumeSource,
  HostAlias = (import "./hostalias.ncl").HostAlias,
  ServiceStatus = (import "./servicestatus.ncl").ServiceStatus,
  VolumeMountStatus = (import "./volumemountstatus.ncl").VolumeMountStatus,
  ContainerPort = (import "./containerport.ncl").ContainerPort,
  PodAntiAffinity = (import "./podantiaffinity.ncl").PodAntiAffinity,
  Secret = (import "./secret.ncl").Secret,
  RBDVolumeSource = (import "./rbdvolumesource.ncl").RBDVolumeSource,
  TCPSocketAction = (import "./tcpsocketaction.ncl").TCPSocketAction,
  PreferredSchedulingTerm = (import "./preferredschedulingterm.ncl").PreferredSchedulingTerm,
  KeyToPath = (import "./keytopath.ncl").KeyToPath,
  PersistentVolumeStatus = (import "./persistentvolumestatus.ncl").PersistentVolumeStatus,
  CronJobStatus = (import "./cronjobstatus.ncl").CronJobStatus,
  SecretProjection = (import "./secretprojection.ncl").SecretProjection,
  StatefulSetStatus = (import "./statefulsetstatus.ncl").StatefulSetStatus,
  WindowsSecurityContextOptions = (import "./windowssecuritycontextoptions.ncl").WindowsSecurityContextOptions,
}
